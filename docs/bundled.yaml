openapi: 3.0.0
info:
  title: OpenAPI
  description: Dokumentasi OpenAPI
  version: 1.0.0
servers:
  - url: 'http://localhost:5000/api/v1'
  - url: 'http://localhost:5123/api'
paths:
  /hello:
    get:
      tags:
        - Hello World
      summary: Hello World
      description: Mengembalikan pesan Hello World
      responses:
        '200':
          description: Berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Hello, world!'
  /levels:
    get:
      tags:
        - Levels
      summary: Ambil semua level
      description: Mengembalikan data semua level
      responses:
        '200':
          description: Berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1levels/get/components/schemas/Level'
                  success:
                    type: boolean
                    example: true
      components:
        schemas:
          Level:
            type: object
            properties:
              id:
                type: integer
                example: 2
              name:
                type: string
                example: Level 1 updated
              created_at:
                type: string
                format: date-time
                example: '2025-07-04T14:15:36.829823+07:00'
              updated_at:
                type: string
                format: date-time
                example: '2025-07-04T14:30:14.4948+07:00'
    post:
      tags:
        - Levels
      summary: Tambah level
      description: Menambahkan level baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Level 3
      responses:
        '201':
          description: Level berhasil ditambahkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1levels/post/components/schemas/Level'
                  success:
                    type: boolean
                    example: true
      components:
        schemas:
          Level:
            type: object
            properties:
              id:
                type: integer
                example: 6
              name:
                type: string
                example: Level 3
              created_at:
                type: string
                format: date-time
                example: '2025-07-04T16:20:27.879181+07:00'
              updated_at:
                type: string
                format: date-time
                example: '2025-07-04T16:20:27.879181+07:00'
  '/levels/{id}':
    put:
      tags:
        - Levels
      summary: Ubah level
      description: Mengubah data level yang sudah ada berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID level yang ingin diubah
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Level 4
      responses:
        '200':
          description: Level berhasil diubah
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1levels~1%7Bid%7D/put/components/schemas/Level'
                  success:
                    type: boolean
                    example: true
        '404':
          description: Level tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Data tidak ditemukan
                  success:
                    type: boolean
                    example: false
      components:
        schemas:
          Level:
            type: object
            properties:
              id:
                type: integer
                example: 7
              name:
                type: string
                example: Level 4
              created_at:
                type: string
                format: date-time
                example: '2025-07-04T16:22:09.576943+07:00'
              updated_at:
                type: string
                format: date-time
                example: '2025-07-04T16:35:54.402047+07:00'
    delete:
      tags:
        - Levels
      summary: Hapus level
      description: Menghapus data level berdasarkan ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID level yang ingin dihapus
      responses:
        '200':
          description: Level berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    type: object
                    example: null
                  message:
                    type: string
                    example: Level berhasil dihapus
                  success:
                    type: boolean
                    example: true
        '404':
          description: Level tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Data tidak ditemukan
                  success:
                    type: boolean
                    example: false
